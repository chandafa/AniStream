rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secure user profiles. Only the authenticated user can read or write their own profile.
     * @path /users/{userId}
     * @allow (create) - Authenticated user creates their own profile with matching userId.
     * @allow (get, list) - Authenticated user reads their own profile.
     * @allow (update, delete) - Authenticated user updates or deletes their own profile.
     * @deny (create) - User attempts to create a profile with a userId that doesn't match their auth.uid.
     * @deny (get, list) - User attempts to read another user's profile.
     * @deny (update, delete) - User attempts to update or delete another user's profile.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Allows public read access to anime data. No writes are allowed.
     * @path /anime/{animeId}
     * @allow (get, list) - Any user can read anime data.
     * @deny (create, update, delete) - No user can create, update, or delete anime data.
     * @principle Public read access with no write access.
     */
    match /anime/{animeId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to episode data. No writes are allowed.
     * @path /episodes/{episodeId}
     * @allow (get, list) - Any user can read episode data.
     * @deny (create, update, delete) - No user can create, update, or delete episode data.
     * @principle Public read access with no write access.
     */
    match /episodes/{episodeId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to genre data. No writes are allowed.
     * @path /genres/{genreId}
     * @allow (get, list) - Any user can read genre data.
     * @deny (create, update, delete) - No user can create, update, or delete genre data.
     * @principle Public read access with no write access.
     */
    match /genres/{genreId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to streaming server data. No writes are allowed.
     * @path /streaming_servers/{serverId}
     * @allow (get, list) - Any user can read streaming server data.
     * @deny (create, update, delete) - No user can create, update, or delete streaming server data.
     * @principle Public read access with no write access.
     */
    match /streaming_servers/{serverId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}