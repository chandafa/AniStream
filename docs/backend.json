
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the OtakuStream platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "username": {
          "type": "string",
          "description": "User's chosen username."
        },
        "registrationDate": {
          "type": "string",
          "description": "Date and time the user registered.",
          "format": "date-time"
        },
        "lastLogin": {
          "type": "string",
          "description": "Last login date and time.",
          "format": "date-time"
        },
        "bookmarks": {
          "type": "array",
          "description": "References to bookmarked Anime.",
          "items": {
            "type": "string"
          }
        },
        "history": {
          "type": "array",
          "description": "References to viewed Anime Episodes.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "email",
        "username",
        "registrationDate"
      ]
    },
    "Anime": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Anime",
      "type": "object",
      "description": "Represents an anime series.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the anime series."
        },
        "title": {
          "type": "string",
          "description": "Title of the anime series."
        },
        "slug": {
          "type": "string",
          "description": "Unique slug for the anime series."
        },
        "synopsis": {
          "type": "string",
          "description": "Synopsis of the anime series."
        },
        "rating": {
          "type": "number",
          "description": "Rating of the anime series."
        },
        "genreIds": {
          "type": "array",
          "description": "References to Genres. (Relationship: Anime N:N Genre)",
          "items": {
            "type": "string"
          }
        },
        "episodeIds": {
          "type": "array",
          "description": "References to Episodes. (Relationship: Anime 1:N Episode)",
          "items": {
            "type": "string"
          }
        },
        "imageUrl": {
          "type": "string",
          "description": "URL to the image of the anime.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "title",
        "slug"
      ]
    },
    "Episode": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Episode",
      "type": "object",
      "description": "Represents a single episode of an anime series.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the episode."
        },
        "animeId": {
          "type": "string",
          "description": "Reference to Anime. (Relationship: Anime 1:N Episode)"
        },
        "title": {
          "type": "string",
          "description": "Title of the episode."
        },
        "episodeNumber": {
          "type": "number",
          "description": "The episode number within the series."
        },
        "slug": {
          "type": "string",
          "description": "Unique slug for the episode."
        },
        "streamingLinks": {
          "type": "array",
          "description": "List of streaming server IDs for the episode.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "animeId",
        "title",
        "episodeNumber"
      ]
    },
    "Genre": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Genre",
      "type": "object",
      "description": "Represents a genre of anime.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the genre."
        },
        "name": {
          "type": "string",
          "description": "Name of the genre (e.g., Action, Comedy, Sci-Fi)."
        },
        "slug": {
          "type": "string",
          "description": "Unique slug for the genre."
        }
      },
      "required": [
        "id",
        "name",
        "slug"
      ]
    },
    "StreamingServer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StreamingServer",
      "type": "object",
      "description": "Represents a streaming server for an episode.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the streaming server."
        },
        "episodeId": {
          "type": "string",
          "description": "Reference to Episode. (Relationship: Episode 1:N StreamingServer)"
        },
        "url": {
          "type": "string",
          "description": "The actual streaming URL of the video.",
          "format": "uri"
        },
        "quality": {
          "type": "string",
          "description": "Video quality (e.g., 360p, 720p, 1080p)."
        }
      },
      "required": [
        "id",
        "episodeId",
        "url"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com",
      "github.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Path-based ownership ensures only the authenticated user can access their own data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/anime/{animeId}",
        "definition": {
          "entityName": "Anime",
          "schema": {
            "$ref": "#/backend/entities/Anime"
          },
          "description": "Stores anime series data.  Accessible to all users.",
          "params": [
            {
              "name": "animeId",
              "description": "The unique identifier of the anime series."
            }
          ]
        }
      },
      {
        "path": "/episodes/{episodeId}",
        "definition": {
          "entityName": "Episode",
          "schema": {
            "$ref": "#/backend/entities/Episode"
          },
          "description": "Stores episode data for anime series. Accessible to all users.",
          "params": [
            {
              "name": "episodeId",
              "description": "The unique identifier of the anime episode."
            }
          ]
        }
      },
      {
        "path": "/genres/{genreId}",
        "definition": {
          "entityName": "Genre",
          "schema": {
            "$ref": "#/backend/entities/Genre"
          },
          "description": "Stores genre data for anime series. Accessible to all users.",
          "params": [
            {
              "name": "genreId",
              "description": "The unique identifier of the anime genre."
            }
          ]
        }
      },
      {
        "path": "/streaming_servers/{serverId}",
        "definition": {
          "entityName": "StreamingServer",
          "schema": {
            "$ref": "#/backend/entities/StreamingServer"
          },
          "description": "Stores streaming server information. Accessible to all users.",
          "params": [
            {
              "name": "serverId",
              "description": "The unique identifier of the streaming server."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support OtakuStream's anime streaming platform, focusing on user authentication, anime content management, and personalized user experiences. Key considerations include authorization independence, data segregation, and clear access modeling.\n\n**Authorization Independence:**\n\n*   User-specific data (bookmarks, history) is stored under `/users/{userId}`, ensuring that access control is path-based and doesn't require complex `get()` calls to parent documents.  This eliminates hierarchical authorization dependencies, simplifies security rules, and allows atomic operations. No denormalization is needed in this case as the path itself provides the authorization context.\n\n**Data Segregation:**\n\n*   Anime, Episodes, Genres, and StreamingServers are stored in top-level collections (`/anime`, `/episodes`, `/genres`, `/streaming_servers`). This segregation simplifies security rules, as each collection has a homogeneous security posture.  Public anime content is separated from private user data.\n\n**Access Modeling:**\n\n*   User data is accessed via path-based ownership (`/users/{userId}`).\n\n**QAPs (Rules are not Filters):**\n\n*   List operations on collections like `/anime` do not require filtering based on user-specific data, enabling secure and efficient listing. User-specific data, such as bookmarks and history, are accessed via the `/users/{userId}` path, so listing does not depend on user roles.\n\n**Invariants:**\n\n*   Path-based ownership ensures the integrity of user data. Timestamps (registrationDate, lastLogin) can be enforced via rules (although not explicitly shown in this design)."
  }
}
